name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        build-tools-version: '34.0.0'
        platform-version: '34'
        ndk-version: '26.1.10909125'
        cmake-version: '3.22.1'

    # Skip signing for debug builds
    - name: Skip signing
      run: |
        mkdir -p ~/.gradle
        echo 'android.signingConfigs.debug.storePassword=android' > ~/.gradle/gradle.properties
        echo 'android.signingConfigs.debug.keyPassword=android' >> ~/.gradle/gradle.properties
        echo 'android.signingConfigs.debug.keyAlias=androiddebugkey' >> ~/.gradle/gradle.properties
        echo 'android.signingConfigs.debug.storeFile=~/.android/debug.keystore' >> ~/.gradle/gradle.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Configure build environment
    - name: Configure build environment
      run: |
        # Create gradle.properties with necessary configurations
        echo "org.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8" > gradle.properties
        echo "android.useAndroidX=true" >> gradle.properties
        echo "android.enableJetifier=true" >> gradle.properties
        echo "android.nonTransitiveRClass=true" >> gradle.properties
        echo "kotlin.code.style=official" >> gradle.properties
        
        # Disable Firebase for CI
        echo "firebaseCrashlytics.mappingFileUpdateEnabled=false" >> gradle.properties
        echo "android.defaults.buildfeatures.buildconfig=true" >> gradle.properties
        
        # Create local.properties with Android SDK location
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        
        # Create a basic google-services.json to prevent build failures
        mkdir -p app/src/debug app/src/release
        cat > app/google-services.json << 'EOL'
        {
          "project_info": {
            "project_number": "000000000000",
            "project_id": "dummy-project",
            "storage_bucket": "dummy-project.appspot.com"
          },
          "client": [{
            "client_info": {
              "mobilesdk_app_id": "1:000000000000:android:0000000000000000000000",
              "android_client_info": {
                "package_name": "com.ronjie.gweather"
              }
            },
            "api_key": [{
              "current_key": "dummy-key"
            }]
          }]
        }
        EOL

    # Build and test
    - name: Build project
      run: |
        ./gradlew clean assembleDebug --stacktrace --info --no-daemon --no-parallel

    - name: Run unit tests
      run: |
        ./gradlew testDebugUnitTest --stacktrace --info --no-daemon --no-parallel

    - name: Run instrumentation tests
      if: github.event_name != 'pull_request'
      run: |
        ./gradlew connectedDebugAndroidTest --stacktrace --info --no-daemon --no-parallel

    - name: Run lint checks
      run: |
        ./gradlew lintDebug --stacktrace --info --no-daemon --no-parallel

    - name: Assemble release APK
      if: github.event_name != 'pull_request'
      run: |
        ./gradlew assembleRelease --stacktrace --info --no-daemon --no-parallel
        
    - name: Bundle release
      if: github.event_name != 'pull_request'
      run: |
        ./gradlew bundleRelease --stacktrace --info --no-daemon --no-parallel
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 5
