name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
  GRADLE_CACHE_DIR: ~/.gradle/caches

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      gradle-properties: ${{ steps.setup.outputs.gradle-properties }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          build-tools-version: '34.0.0'
          platform-version: '34'
          ndk-version: '26.1.10909125'
          cmake-version: '3.22.1'

      - name: Accept Android SDK licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Setup environment
        id: setup
        run: |
          # Create and output Gradle properties
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties << 'EOL'
          org.gradle.caching=true
          org.gradle.parallel=true
          org.gradle.daemon=false
          android.defaults.buildfeatures.buildconfig=true
          firebaseCrashlytics.mappingFileUpdateEnabled=false
          android.enableFirebase=false
          EOL
          
          # Create local.properties
          echo 'sdk.dir=$ANDROID_HOME' > local.properties
          
          # Create minimal google-services.json
          mkdir -p app
          cat > app/google-services.json << 'EOL'
          {
            "project_info": {
              "project_number": "000000000000",
              "project_id": "dummy-project-id",
              "storage_bucket": "dummy-bucket.appspot.com"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "1:000000000000:android:0000000000000000000000",
                  "android_client_info": {
                    "package_name": "com.ronjie.gweather"
                  }
                },
                "api_key": [
                  {
                    "current_key": "dummy-key"
                  }
                ]
              }
            ]
          }
          EOL
          
          chmod +x gradlew
          
          # Output Gradle properties for other jobs
          echo "gradle-properties=$(cat ~/.gradle/gradle.properties | base64 -w0)" >> $GITHUB_OUTPUT

  test:
    name: Run Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Gradle properties
        run: |
          mkdir -p ~/.gradle
          echo "${{ needs.setup.outputs.gradle-properties }}" | base64 -d > ~/.gradle/gradle.properties

      - name: Run unit tests
        run: |
          ./gradlew testDebugUnitTest --stacktrace --no-daemon -Pandroid.enableFirebase=false

  build:
    name: Build APK
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Gradle properties
        run: |
          mkdir -p ~/.gradle
          echo "${{ needs.setup.outputs.gradle-properties }}" | base64 -d > ~/.gradle/gradle.properties

      - name: Build debug APK
        run: |
          ./gradlew assembleDebug --stacktrace --no-daemon

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 5
